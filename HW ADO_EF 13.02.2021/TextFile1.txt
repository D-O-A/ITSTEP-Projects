Entity Framework

1. Создаем новый проект, через менеджер NuGet устанавливаем
    Entity Framework
2. Создаем папку  Model, в ней описываем ORM классы:
    Manager, Department (скопировали из прошлого проекта)
3. Создаем класс-контекст FirmContext, наследуем его от
    System.Data.Entity.DbContext
   В нем описываем
        public DbSet<Manager>    Managers    { get; set; }
        public DbSet<Department> Departments { get; set; }
4. В программе (в конструкторе формы)
    создаем объект Firm = new FirmContext()
    обращаемся к его таблицам Managers и Departments
    при обновлении данных вызываем метод SaveChanges()

5. Косвенным признаком работы EF является задержка после 
    запуска (долгий запуск) и возрастание используемой памяти
6. После успешного запуска создается БД, подключиться к которой
    можно из инструментов : Tools - Connect to DB - 
    Server: (localdb)\MSSQLLocalDb
    DB:  по имени контекста: ADO_EF.Model.FirmContext

------------------------------------
Миграции
это механизм EF внесения изменений в контекст данных - в 
количество/состав объектов данных
!! Миграции лучше заложить с самого начала, иначе 
 они могут конфликтовать с уже созданным контекстом
после п. 4 (см выше), перед запуском программы
активируем миграции:
 - включаем консоль менеджера пакетов (РМ)
    Tools - NuGet - Console
 - Enable-Migrations    
    включение механизма - в проекте создается папка Migrations
    ? смотрим, есть ли файл с начальной миграцией (Initial)
    если нет, создаем начальную миграцию
 - Add-Migration Init
    Init - название миграции, может быть изменено
 - Update-Database
    Внесение изменений в БД (начальная миграция создает БД)

Необходимо внести изменения в структуру данных:
 1. Вносим изменения в C#-код (в описание классов / контекста)
 2. Создаем миграцию: Add-Migration NameOfMig
 3. Обновляем БД: Update-Database

Д.З. Добавить к проекту класс Sale, при помощи миграций
 обновить БД. Создать кнопку "Генерировать продажи", добавляющую
 100 записей в таблицу продаж
 * кол-во записей ввести через форму

Задания:
 В момент старта отобразить "статистику" - в основном окне
  - менеджеров - 60
  - товаров - 20
  - отделов - 7
  - продаж - 100 (будет обновляться при генерировании новых)

---
выводить красиво
Д.З.
соединить продажи с другими данными, вывести 
дата - сотрудник - товар - кол-во (сумма)
* Реализовать фильтрацию по выбранной дате
 (+ настроить генератор до сегодня)