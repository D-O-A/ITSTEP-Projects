LINQ - Language INtegrated Queries

"Code First" - подход к разработке ПО, при котором ORM (описание объектов) происходит раньше, чем создание таблиц БД.
(Data First)

-------------------------------

Об Инверсии Управления (Dependency Injection)

Мы создаем контекст. При создании объекта (в конструкторе) он должен подключиться к БД и "скачать" данные в коллекции.
Для подключения нужны данные конфигурации, НО эта же конфигурация может понадобиться и другим объектам.
Клонировать конфигурации не логично. Лучше один раз создать, а везде, где надо, получить ссылку.

Эта задача возлагается на "контейнер зависимостей":
- создается контейнер
- в нем регистрируются "поставщики" (сервисы) - от которых зависят другие объекты
- в других классах указываются зависимости (поле есть, а "new" нет)
- вызывается "создающий" метод контейнера для создания объектов с заполненными зависимостями

В стартовой точке (Program) создаем контейнер:
- объявляем public static UnityContainer DiContainer;
  инициализируем DiContainer = new UnityContainer();
  Обявление public static делает его доступным во всех точках нашей программы

- регистрируем в контейнере "зависимости" - то, что сам контейнер сможет "встроить" (Inject) в другие объекты.

- при описании классов используем зависимости:
  а) как параметр конструктора
  б) как свойство с аттрибутом [Dependency]


Операции создания объектов:
 вместо obj = new T;
 obj = Program.DiContainer.Resolve<Type>();
 - все зависимости будет подставлять контейнер из зарегистрированных ранее

----------------------------------



